C++反汇编与逆向分析技术揭秘
漏洞战争：软件漏洞分析精要
深度探索C++对象模型

操作系统设计与实现_上下册
推荐理由：强烈推荐这本书，这本书写的太好了，介绍了X86架构下的各种知识并实现了一个小小的内核，必须从头到尾认真看一遍。里面有部分汇编教程，可以跳过。

x86汇编语言:从实模式到保护模式
推荐理由：这本书从零开始实现一个小的操作系统内核，看完之后可以对操作系统最基本的原理有比较好的理解。

深入理解计算机系统
推荐理由：如果计算机科学只能带走一本书的话，我选择这本。 这是本很有趣的书，了解计算机底层技术是件极富挑战同趣味的事情，这样的书籍给人带来极大乐趣。个人认为这样的书籍，计科专业的本科学生越早接触越好，它会让你比别人更早拥有一个系统的计算机知识，更能触类旁通。如果想从事底层开发或在Linux平台下开发，这本书是很好的选择。聪明的你会喜欢这本书的。

操作系统精髓与设计原理
推荐理由：本书最大的特点就是对操作系统的基本概念解释的很清楚；对操作系统的原理和内容都做了清晰的阐述。同时，还通过列举实际的操作系统（如windows和linux），对某些问题来进一步说明，使得原理和概念性的东西不再那么枯燥。最后，这本书比Andrew S.Tanenbaum的那本经典的《现代操作系统》还要更加深入一些，不仅可以让读者入门，还可以让读者对操作系统的理解更加的深刻。

编码
推荐理由：读完本书，我觉得自己也可以给别人讲解计算机的原理和应用，以前自己一知半解，模摸糊糊，所以在给别人讲时总解释不清楚，现在就清晰多了。朋友是文科出身，对计算机原理一窍不通，我试着给她解释，她很快就能理解那些简单的理论。

现代操作系统
推荐理由：本书最富有魅力最值得赞赏的地方在于――作者引入一个概念必定是由一个问题和困境带出的，也就是说，作者不会无缘无故的列提纲似的推出一个全新概念让人摸不着头脑思索为什么，而是由“既然有这样的情况，那我们迫切需要达到的效果是什么，由此我们自然而然地想出了那样的实现和解决方式”这样的思维模式来引导读者，循序渐进的方法令读者不会一下子脱离进度。

鸟哥的Linux私房菜 基础学习篇 第四版
推荐理由：如果想要入门，这本就是最好的选择了。讲得非常细致，这位来自台湾的帅锅在写书方面确实很有一套，依我看，维护世界和平的重任就交给他了。

UNIX编程艺术
推荐理由：书籍拿到手比较厚实，感觉很有分量，不过读起来倒不那么难啃。翻译的还是很流畅，整体下来很酣畅，译者说用了1年，看来还是比较恰当的。书中介绍了unix的文化、历史，举了不少案例。
ESR身上unix黑客气味贯彻始终本书，在ESR看来unix编程就是个玩的过程。
本书中融贯了n多大师在unix操作系统上的经验，大部分东西其实不仅仅应用于操作系统，在任何系统的开发和构造上都是非常适用和实用的。

UNIX环境高级编程
推荐理由：书的经典性就在于不高不低不多不少，把UNIX系统编程的来龙去脉向你娓娓道来。很多地方都可以让你感觉到，你的疑惑作者在写书的时候已经了如指掌。从疑惑到顿悟的那一瞬间的畅快感是学习最大的快乐。所以，我们的口号就是：有问题，找APUE。

UNIX网络编程

深入理解LINUX内核
推荐理由：非常棒的内核方面的书！这本书，含金量是足够了，但是看起来非常耗时，非常基础的底层技术：汇编知识（主要是X86体系的硬件接口知识）、C/C++功底、数据结构，因为没有提到网络方面的内核代码，所以对TCP/IP协议没有要求。

深入Linux内核架构
推荐理由：如果有人让我推荐 linux 内核书籍，我会首推这本，这本书帮读者抓住内核代码中的核心内容，使读者不会陷入内核代码的泥潭之中。这本书有两点值得称赞：1.图文并茂，一些复杂的数据结构和函数执行流程如果用语言描述肯定是既冗长又枯燥，如果用图片刻画出来就清晰多了。2.只列举核心代码，几乎所有的代码（内核/应用程序）为了安全、调试、可移植有很多附加的代码，这些代码和核心逻辑关系不大，如果去掉了这些而只列出核心逻辑代码有助于读者抓住重点不至于迷失。

Linux内核源代码情景分析
推荐理由：这本书不像前两本那样，仅仅只是罗列出Linux的特性，数据结构，相关的技术等等，他是在带领你去走进Linux源代码的世界，顺着代码的调用，一路斩荆披棘，最后带你到底目的地。途中虽然惊险，但一路过来，却是充满了趣味，更是享受到了智力上的成就感。 读这本书，仿佛是你的好朋友就坐在你面前跟你讲话，他把Linux源码中的枯燥的理论跟生活中普遍的事物联系起来，像进程的task_struct结构体，相当于我们的“户口本”，进程转换到”zombie”状态，“进程死亡了无法帮自己注销户口登记，要父进程帮忙”等等，这些解释非常地形象。所谓的大师也便是如此，用最通俗的语言把最深奥的道理讲明白，我想，这本书的作者做到了。